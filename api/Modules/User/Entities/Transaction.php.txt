<?php namespace Modules\User\Entities;

use Modules\Core\Entities\Eloquent\CoreModel;

class Transaction extends CoreModel {
    /**
     * The table associated with the model.
     * @var string
     */
    protected $table = 'user__transactions';

    /**
     * Indicates if the model should be timestamped.
     * @var bool
     */
    public $timestamps = true;

    /**
     * The attributes that are mass assignable.
     * @var array
     */
    protected $fillable = ['invoice_no', 'invoice_prefix', 'created_by', 'user_id', 'user_expired_at', 'payment_method', 'payment_at', 'quantity', 'price', 'total', 'currency_code', 'summary', 'response_code', 'status', 'payload', 'ip', 'forwarded_ip', 'user_agent', 'accept_language'];

    /**
     * The attributes that should be hidden for serialization.
     * @var array
     */
    protected $hidden = ['created_by'];

    /**
     * The attributes that should be casted to native types.
     * @var array
     */
    protected $casts = [
        'id'             => 'integer',
        'created_by'     => 'integer',
        'user_id'        => 'integer',
        'payment_method' => 'integer',
        'quantity'       => 'integer',
        'price'          => 'double',
        'total'          => 'double',
    ];

    /**
     * The accessors to append to the model's array form.
     *
     * @var array
     */
    protected $appends = ['payment_method_name', 'status_name'];

    public function getInvoiceNoAttribute($value) {
        return $this->invoice_prefix . number_pad($value, 4);
    }

    public function getPaymentMethodNameAttribute() {
        if ($this->locale == 'en') {
            $list = ['Payment in cash', 'Bank transfer', 'Visa, Master, JCB international card', 'Domestic ATM / Internet Banking card'];
        } else {
            $list = ['Thanh toán bằng tiền mặt', 'Thanh toán bằng chuyển khoản', 'Thanh toán bằng thẻ quốc tế Visa, Master, JCB', 'Thẻ ATM nội địa/Internet Banking'];
        }
        if (isset($list[$this->payment_method])) {
            return $list[$this->payment_method];
        } else {
            return $list[0];
        }
    }

    public function getStatusNameAttribute() {
        $list = [
            'pending'    => $this->locale == 'en' ? 'Pending' : 'Đang chờ xử lý',
            'in_process' => $this->locale == 'en' ? 'In process' : 'Đang xử lý',
            'completed'  => $this->locale == 'en' ? 'Completed' : 'Đã thanh toán',
            'failed'     => $this->locale == 'en' ? 'Failed' : 'Thanh toán thất bại',
            'paid'       => $this->locale == 'en' ? 'Paid' : 'Đã thanh toán',
            'refunded'   => $this->locale == 'en' ? 'Refunded' : 'Hoàn lại',
            'canceled'   => $this->locale == 'en' ? 'Canceled' : 'Bị hủy bỏ',
            'unknown'    => $this->locale == 'en' ? 'Unknown' : 'Lỗi không xác định'
        ];
        if (!empty($this->status) && isset($list[$this->status])) {
            return $list[$this->status];
        } else {
            return '';
        }
    }

    /**
     * Relationship
     */
    public function user() {
        return $this->belongsTo('Modules\User\Entities\Sentinel\User');
    }
}
