<?php

namespace Modules\User\Entities;

use Modules\Core\Entities\Eloquent\CoreModel;

class History extends CoreModel {
    /**
     * The table associated with the model.
     * @var string
     */
    protected $table = 'user__histories';

    /**
     * Indicates if the model should be timestamped.
     * @var bool
     */
    public $timestamps = true;

    protected $fillable = [
        'user_id',
        'ip',
        'key',
        'value',
        'of_id',
        'of_user_id',
        'data',
    ];

    /**
     * The attributes that should be hidden for serialization.
     * @var array
     */
    protected $hidden = [
    ];

    /**
     * The attributes that should be casted to native types.
     * @var array
     */
    protected $casts = [
        'id'      => 'integer',
        'user_id' => 'integer',
    ];

    public function setDataAttribute($value) {
        if (is_array($value)) {
            $this->attributes['data'] = json_encode($value, true);
        } else {
            $this->attributes['data'] = $value;
        }
    }

    public function getDataAttribute($value) {
        $output = [];
        try {
            $output = json_decode($value, true);
        } catch (\Exception $ex) {

        }
        return $output;
    }

    public function user() {
        return $this->belongsTo('Modules\User\Entities\Sentinel\User');
    }

    /**
     * Logger
     * @param $user_id
     * @param $key
     * @param $value
     * @param null $of_id
     * @param null $of_user_id
     * @param null $data
     */
    public static function logger($user_id, $key, $value, $of_id = null, $of_user_id = null, $data = null) {
        $input = [
            'user_id' => $user_id,
            'key'     => $key,
            'value'   => $value,
        ];
        if ($of_id) $input['of_id'] = $of_id;
        if ($of_user_id) $input['of_user_id'] = $of_user_id;
        if ($data) $input['data'] = $data;

        self::create($input);
    }
}
